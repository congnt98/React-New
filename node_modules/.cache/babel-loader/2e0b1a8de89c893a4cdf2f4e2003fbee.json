{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\reactnew\\\\src\\\\views\\\\todos\\\\listTodo.js\";\nimport React from \"react\";\nimport './listTodo.scss';\nimport AddTodo from \"./addTodo\";\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListTodo extends React.Component {\n  constructor(props) {\n    super(props); // Don't call this.setState() here!\n\n    this.addNewtodo = todo => {\n      this.setState({\n        ListTodos: [...this.state.ListTodos, todo]\n      });\n      toast.success(\"Wow so easy!\");\n    };\n\n    this.onDeletetodo = item => {\n      let curentTodo = this.state.ListTodos;\n      curentTodo = curentTodo.filter(todo => todo.id !== item.id);\n      this.setState({\n        ListTodos: curentTodo\n      });\n    };\n\n    this.clickEdit = todo => {\n      this.setState({\n        edittodo: todo\n      });\n    };\n\n    this.state = {\n      ListTodos: [{\n        id: 'todo1',\n        title: 'doing homework'\n      }, {\n        id: 'todo2',\n        title: 'video calls'\n      }, {\n        id: 'todo3',\n        title: 'fixs bugs'\n      }],\n      edittodo: {}\n    };\n  }\n\n  render() {\n    var edittodo = this.state.edittodo;\n    let ListTodos = this.state.ListTodos; // = let{listTodo} =this.state.ListTodo\n\n    let isEmptyObj = Object.keys(edittodo).length === 0;\n    console.log('check empty', isEmptyObj);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: [/*#__PURE__*/_jsxDEV(AddTodo, {\n        addNewtodo: this.addNewtodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-list-todo\",\n        children: ListTodos && ListTodos.length > 0 && ListTodos.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-list\",\n            children: [isEmptyObj === false ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [index + 1, \"-\", item.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [index + 1, \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                value: edittodo.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 55\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit\",\n              onClick: () => this.clickEdit(item),\n              children: \"edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete\",\n              onClick: () => this.onDeletetodo(item),\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListTodo;","map":{"version":3,"sources":["D:/Web/reactnew/src/views/todos/listTodo.js"],"names":["React","AddTodo","toast","ListTodo","Component","constructor","props","addNewtodo","todo","setState","ListTodos","state","success","onDeletetodo","item","curentTodo","filter","id","clickEdit","edittodo","title","render","isEmptyObj","Object","keys","length","console","log","map","index"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport './listTodo.scss'\r\nimport AddTodo from \"./addTodo\";\r\nimport { toast } from 'react-toastify';\r\n\r\nclass ListTodo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // Don't call this.setState() here!\r\n        this.state = {\r\n            ListTodos: [\r\n                { id: 'todo1', title: 'doing homework' },\r\n                { id: 'todo2', title: 'video calls' },\r\n                { id: 'todo3', title: 'fixs bugs' },\r\n            ],\r\n            edittodo: {\r\n\r\n            }\r\n        };\r\n\r\n    }\r\n\r\n\r\n    addNewtodo = (todo) => {\r\n        this.setState({\r\n            ListTodos: [...this.state.ListTodos, todo],\r\n        })\r\n        toast.success(\"Wow so easy!\");\r\n\r\n    }\r\n\r\n    onDeletetodo = (item) => {\r\n        let curentTodo = this.state.ListTodos\r\n        curentTodo = curentTodo.filter(todo => todo.id !== item.id)\r\n        this.setState({\r\n            ListTodos: curentTodo\r\n        })\r\n    }\r\n\r\n\r\n\r\n    clickEdit = (todo) => {\r\n        this.setState({\r\n            edittodo: todo\r\n        })\r\n    }\r\n    render() {\r\n        var edittodo = this.state.edittodo;\r\n        let ListTodos = this.state.ListTodos;// = let{listTodo} =this.state.ListTodo\r\n\r\n\r\n        let isEmptyObj = Object.keys(edittodo).length === 0;\r\n        console.log('check empty', isEmptyObj);\r\n        return (\r\n            <div className=\"Container\">\r\n                <AddTodo addNewtodo={this.addNewtodo} />\r\n                <div className=\"content-list-todo\">\r\n                    {ListTodos && ListTodos.length > 0 && ListTodos.map((item, index) => {\r\n                        return (\r\n                            <div className=\"todo-list\" key={item.id}>\r\n\r\n                                {isEmptyObj === false ?\r\n                                    <span>{index + 1}-{item.title}</span>\r\n                                    :\r\n                                    <span>{index + 1} <input value={edittodo.title} /> </span>\r\n                                }\r\n                                <button className=\"edit\"\r\n                                    onClick={() => this.clickEdit(item)}\r\n                                >edit</button>\r\n                                <button className=\"delete\" onClick={() => this.onDeletetodo(item)} >delete</button>\r\n\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ListTodo"]},"metadata":{},"sourceType":"module"}