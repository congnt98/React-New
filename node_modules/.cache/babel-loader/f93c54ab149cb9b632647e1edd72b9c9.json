{"ast":null,"code":"import _objectSpread from\"D:/Web/React/reactnew/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"D:/Web/React/reactnew/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _classCallCheck from\"D:/Web/React/reactnew/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"D:/Web/React/reactnew/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"D:/Web/React/reactnew/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"D:/Web/React/reactnew/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from\"react\";import'../../styles/listTodo.scss';import AddTodo from\"./addTodo\";import{toast}from'react-toastify';import Color from\"../HOC/color\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ListTodo=/*#__PURE__*/function(_React$Component){_inherits(ListTodo,_React$Component);var _super=_createSuper(ListTodo);function ListTodo(props){var _this;_classCallCheck(this,ListTodo);_this=_super.call(this,props);// Don't call this.setState() here!\n_this.addNewtodo=function(todo){_this.setState({ListTodos:[].concat(_toConsumableArray(_this.state.ListTodos),[todo])});toast.success(\"Wow so easy!\");};_this.onDeletetodo=function(item){var curentTodo=_this.state.ListTodos;curentTodo=curentTodo.filter(function(todo){return todo.id!==item.id;});_this.setState({ListTodos:curentTodo});};_this.clickEdit=function(todo){var _this$state=_this.state,edittodo=_this$state.edittodo,ListTodos=_this$state.ListTodos;var isEmptyObj=Object.keys(edittodo).length===0;if(isEmptyObj===false&&edittodo.id===todo.id){var updatedOSArray=_toConsumableArray(ListTodos);var objIndex=updatedOSArray.findIndex(function(obj){return obj.id===todo.id;});//Log object to Console.\n//Update object's name property.\nupdatedOSArray[objIndex].title=edittodo.title;_this.setState({ListTodos:updatedOSArray,edittodo:{}});return;}_this.setState({edittodo:todo});};_this.onChangeedit=function(event){var edittodonew=_objectSpread({},_this.state.edittodo);edittodonew.title=event.target.value;_this.setState({edittodo:edittodonew});};_this.state={ListTodos:[{id:'todo1',title:'doing homework'},{id:'todo2',title:'video calls'},{id:'todo3',title:'fixs bugs'}],edittodo:{}};return _this;}_createClass(ListTodo,[{key:\"render\",value:function render(){var _this2=this;var edittodo=this.state.edittodo;var ListTodos=this.state.ListTodos;// = let{listTodo} =this.state.ListTodo\nvar isEmptyObj=Object.keys(edittodo).length===0;// console.log('check empty', isEmptyObj); check rỗng or không rỗng true:false\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:\"List Todo by Nguy\\u1EC5n Th\\xE0nh C\\xF4ng\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"Container\",children:[/*#__PURE__*/_jsx(AddTodo,{addNewtodo:this.addNewtodo}),/*#__PURE__*/_jsx(\"div\",{className:\"content-list-todo\",children:ListTodos&&ListTodos.length>0&&ListTodos.map(function(item,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"todo-list\",children:[isEmptyObj===true?/*#__PURE__*/_jsxs(\"span\",{children:[index+1,\"-\",item.title]}):/*#__PURE__*/_jsx(_Fragment,{children:edittodo.id===item.id?/*#__PURE__*/_jsxs(\"span\",{children:[\" \",index+1,\"-\",/*#__PURE__*/_jsx(\"input\",{value:edittodo.title,onChange:function onChange(event){return _this2.onChangeedit(event);}}),\" \"]}):/*#__PURE__*/_jsxs(\"span\",{children:[index+1,\"-\",item.title]})}),/*#__PURE__*/_jsx(\"button\",{className:\"edit\",onClick:function onClick(){return _this2.clickEdit(item);},children:isEmptyObj===false&&edittodo.id===item.id?'save':'edit'}),/*#__PURE__*/_jsx(\"button\",{className:\"delete\",onClick:function onClick(){return _this2.onDeletetodo(item);},children:\"delete\"})]},item.id);})})]})]});}}]);return ListTodo;}(React.Component);export default Color(ListTodo);","map":{"version":3,"sources":["D:/Web/React/reactnew/src/views/todos/listTodo.js"],"names":["React","AddTodo","toast","Color","ListTodo","props","addNewtodo","todo","setState","ListTodos","state","success","onDeletetodo","item","curentTodo","filter","id","clickEdit","edittodo","isEmptyObj","Object","keys","length","updatedOSArray","objIndex","findIndex","obj","title","onChangeedit","event","edittodonew","target","value","map","index","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport '../../styles/listTodo.scss'\r\nimport AddTodo from \"./addTodo\";\r\nimport { toast } from 'react-toastify';\r\nimport Color from \"../HOC/color\";\r\n\r\nclass ListTodo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // Don't call this.setState() here!\r\n        this.state = {\r\n            ListTodos: [\r\n                { id: 'todo1', title: 'doing homework' },\r\n                { id: 'todo2', title: 'video calls' },\r\n                { id: 'todo3', title: 'fixs bugs' },\r\n            ],\r\n            edittodo: {\r\n\r\n            }\r\n        };\r\n\r\n    }\r\n    addNewtodo = (todo) => {\r\n        this.setState({\r\n            ListTodos: [...this.state.ListTodos, todo],\r\n        })\r\n        toast.success(\"Wow so easy!\");\r\n\r\n    }\r\n    onDeletetodo = (item) => {\r\n        let curentTodo = this.state.ListTodos\r\n        curentTodo = curentTodo.filter(todo => todo.id !== item.id)\r\n        this.setState({\r\n            ListTodos: curentTodo\r\n        })\r\n    }\r\n    clickEdit = (todo) => {\r\n        let { edittodo, ListTodos } = this.state\r\n        let isEmptyObj = Object.keys(edittodo).length === 0;\r\n        if (isEmptyObj === false && edittodo.id === todo.id) {\r\n\r\n            var updatedOSArray = [...ListTodos];\r\n\r\n            let objIndex = updatedOSArray.findIndex((obj => obj.id === todo.id));\r\n\r\n            //Log object to Console.\r\n            //Update object's name property.\r\n            updatedOSArray[objIndex].title = edittodo.title\r\n            this.setState({\r\n                ListTodos: updatedOSArray,\r\n                edittodo: {}\r\n            })\r\n            return;\r\n        }\r\n        this.setState({\r\n            edittodo: todo\r\n        })\r\n    }\r\n\r\n    onChangeedit = (event) => {\r\n        var edittodonew = { ...this.state.edittodo }\r\n        edittodonew.title = event.target.value\r\n        this.setState({\r\n            edittodo: edittodonew\r\n        })\r\n    }\r\n    render() {\r\n        var edittodo = this.state.edittodo;\r\n        let ListTodos = this.state.ListTodos;// = let{listTodo} =this.state.ListTodo\r\n        let isEmptyObj = Object.keys(edittodo).length === 0;\r\n        // console.log('check empty', isEmptyObj); check rỗng or không rỗng true:false\r\n        return (\r\n            <>\r\n                <p>\r\n                    List Todo by Nguyễn Thành Công\r\n                </p>\r\n                <div className=\"Container\">\r\n                    <AddTodo addNewtodo={this.addNewtodo} />\r\n                    <div className=\"content-list-todo\">\r\n                        {ListTodos && ListTodos.length > 0 && ListTodos.map((item, index) => {\r\n                            return (\r\n                                <div className=\"todo-list\" key={item.id}>\r\n                                    {isEmptyObj === true ?\r\n                                        <span>{index + 1}-{item.title}</span>\r\n                                        :\r\n                                        <>\r\n                                            {edittodo.id === item.id ?\r\n                                                < span > {index + 1}-<input\r\n                                                    value={edittodo.title}\r\n                                                    onChange={(event) => this.onChangeedit(event)} /> </span>\r\n                                                :\r\n                                                <span>{index + 1}-{item.title}</span>\r\n                                            }\r\n                                        </>\r\n                                    }\r\n                                    <button className=\"edit\"\r\n                                        onClick={() => this.clickEdit(item)}  >\r\n                                        {isEmptyObj === false && edittodo.id === item.id ? 'save' : 'edit'}\r\n                                    </button>\r\n                                    <button className=\"delete\" onClick={() => this.onDeletetodo(item)} >delete</button>\r\n\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    </div>\r\n                </div >\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Color(ListTodo)\r\n\r\n"]},"metadata":{},"sourceType":"module"}