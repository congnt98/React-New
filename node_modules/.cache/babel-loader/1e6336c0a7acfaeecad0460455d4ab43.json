{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\React\\\\reactnew\\\\src\\\\views\\\\todopro\\\\todopro.js\";\nimport React from \"react\";\nimport \"../../styles/todopro.scss\";\nimport Form from \"../../component/todopro/form\";\nimport Control from \"../../component/todopro/control\";\nimport Table from \"../../component/todopro/table\";\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Todopro extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.openForm = () => {\n      this.setState({\n        isDisplayForm: true\n      });\n    };\n\n    this.setDefaultForm = () => {\n      this.setState({\n        isDisplayForm: false,\n        editTask: {}\n      });\n    };\n\n    this.onCloseForm = () => {\n      this.setState({\n        isDisplayForm: false\n      });\n    };\n\n    this.onAddForm = () => {\n      this.props.onToggoForm();\n    };\n\n    this.editTask = id => {\n      let {\n        tasks\n      } = this.state;\n      var index = tasks.findIndex(x => x.id === id);\n      var Task = tasks[index];\n      this.setState({\n        editTask: Task\n      });\n      this.openForm();\n    };\n\n    this.onFilter = (filterName, filterStatus) => {\n      // console.log(filterName, filterStatus);\n      filterStatus = parseInt(filterStatus); //console.log();filterStatus\n\n      this.setState({\n        filter: {\n          name: filterName,\n          status: filterStatus\n        }\n      });\n    };\n\n    this.onSort = e => {\n      var onSort = e;\n      this.setState({\n        sort: onSort\n      });\n    };\n\n    this.onSearch = keyword => {\n      this.setState({\n        keyword: keyword\n      });\n    };\n\n    this.state = {\n      editTask: {},\n      filter: {\n        name: '',\n        status: -1\n      },\n      sort: '',\n      keyword: ''\n    };\n  }\n\n  render() {\n    var {\n      editTask,\n      filter,\n      sort,\n      keyword\n    } = this.state;\n    var {\n      isDisplayForm\n    } = this.props; // console.log(sort);\n    // var filterName = tasks.filter((str) => {\n    //     return str.name.toLowerCase().indexOf(filter.name.toLowerCase()) >= 0;\n    // });\n    // tasks = filterName\n    // var filterstatus = tasks.filter(task => {\n    //     if (filter.status === -1) {\n    //         return task\n    //     } else {\n    //         return task.status === (filter.status === 0 ? false : true)\n    //     }\n    // })\n    // // console.log(filterstatus);\n    // tasks = filterstatus\n    // //lọc tìm kiếm trong form tương tự\n    // // if (filter) {\n    // //     if (filter.name) {\n    // //         var tasks = tasks.filter(e => {\n    // //             return e.name.toLowerCase().indexOf(filter.name) !== -1\n    // //         })\n    // //     }\n    // // }\n    // if (sort !== '') {\n    //     if (sort === 'az') { tasks.sort((a, b) => a.name.localeCompare(b.name)) }\n    //     if (sort === 'za') { tasks.sort((a, b) => b.name.localeCompare(a.name)) }\n    //     if (sort === 'kh') { tasks.sort((a, b) => b.status - a.status) }\n    //     if (sort === 'a') { tasks.sort((a, b) => a.status - b.status) }\n    // }\n    // if (keyword !== '') {\n    //     tasks = tasks.filter((str) => {\n    //         return str.name.toLowerCase().indexOf(keyword) >= 0;\n    //     });\n    // }\n\n    var checkForm = isDisplayForm === true ? /*#__PURE__*/_jsxDEV(Form, {\n      openForm: this.openForm,\n      editTask: editTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 50\n    }, this) : '';\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" row_taitle text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: isDisplayForm === true ? \"col-md-4\" : \"col-md-0\",\n            children: checkForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: isDisplayForm === true ? \"col-md-8\" : \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"btn btn-primary mx-1\",\n                onClick: () => this.onAddForm(),\n                children: isDisplayForm === true ? 'Danh sách Công Việc' : 'Thêm Công việc'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(Control, {\n                onSort: this.onSort,\n                onSearch: this.onSearch\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  editTask: this.editTask,\n                  onFilter: this.onFilter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    isDisplayForm: state.isDisplayForm\n  };\n};\n\nconst mapDispatch = (dispatch, props) => {\n  return {\n    onToggoForm: () => {\n      dispatch(actions.toggoForm());\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(Todopro);","map":{"version":3,"sources":["D:/Web/React/reactnew/src/views/todopro/todopro.js"],"names":["React","Form","Control","Table","connect","actions","Todopro","Component","constructor","props","openForm","setState","isDisplayForm","setDefaultForm","editTask","onCloseForm","onAddForm","onToggoForm","id","tasks","state","index","findIndex","x","Task","onFilter","filterName","filterStatus","parseInt","filter","name","status","onSort","e","sort","onSearch","keyword","render","checkForm","mapState","mapDispatch","dispatch","toggoForm"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport \"../../styles/todopro.scss\"\r\nimport Form from \"../../component/todopro/form\";\r\nimport Control from \"../../component/todopro/control\";\r\nimport Table from \"../../component/todopro/table\";\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../store/actions/index'\r\n\r\nclass Todopro extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editTask: {},\r\n            filter: {\r\n                name: '',\r\n                status: -1\r\n            },\r\n            sort: '',\r\n            keyword: ''\r\n        };\r\n    }\r\n\r\n\r\n    openForm = () => {\r\n        this.setState({\r\n            isDisplayForm: true,\r\n        })\r\n    }\r\n    setDefaultForm = () => {\r\n        this.setState({\r\n            isDisplayForm: false,\r\n            editTask: {}\r\n        })\r\n    }\r\n    onCloseForm = () => {\r\n        this.setState({\r\n            isDisplayForm: false\r\n        })\r\n    }\r\n    onAddForm = () => {\r\n        this.props.onToggoForm()\r\n    }\r\n\r\n\r\n    editTask = (id) => {\r\n        let { tasks } = this.state\r\n        var index = tasks.findIndex(x => x.id === id);\r\n        var Task = tasks[index]\r\n        this.setState({\r\n            editTask: Task\r\n        })\r\n        this.openForm()\r\n    }\r\n    onFilter = (filterName, filterStatus) => {\r\n        // console.log(filterName, filterStatus);\r\n        filterStatus = (parseInt(filterStatus))\r\n        //console.log();filterStatus\r\n\r\n        this.setState({\r\n            filter: {\r\n                name: filterName,\r\n                status: filterStatus\r\n            }\r\n        })\r\n    }\r\n    onSort = (e) => {\r\n        var onSort = e\r\n        this.setState({\r\n            sort: onSort\r\n        })\r\n    }\r\n    onSearch = (keyword) => {\r\n        this.setState({\r\n            keyword: keyword\r\n        })\r\n    }\r\n    render() {\r\n        var { editTask, filter, sort, keyword } = this.state\r\n        var { isDisplayForm } = this.props;\r\n        // console.log(sort);\r\n        // var filterName = tasks.filter((str) => {\r\n        //     return str.name.toLowerCase().indexOf(filter.name.toLowerCase()) >= 0;\r\n        // });\r\n        // tasks = filterName\r\n        // var filterstatus = tasks.filter(task => {\r\n        //     if (filter.status === -1) {\r\n        //         return task\r\n        //     } else {\r\n        //         return task.status === (filter.status === 0 ? false : true)\r\n        //     }\r\n        // })\r\n        // // console.log(filterstatus);\r\n        // tasks = filterstatus\r\n        // //lọc tìm kiếm trong form tương tự\r\n        // // if (filter) {\r\n        // //     if (filter.name) {\r\n        // //         var tasks = tasks.filter(e => {\r\n        // //             return e.name.toLowerCase().indexOf(filter.name) !== -1\r\n        // //         })\r\n        // //     }\r\n        // // }\r\n        // if (sort !== '') {\r\n        //     if (sort === 'az') { tasks.sort((a, b) => a.name.localeCompare(b.name)) }\r\n        //     if (sort === 'za') { tasks.sort((a, b) => b.name.localeCompare(a.name)) }\r\n        //     if (sort === 'kh') { tasks.sort((a, b) => b.status - a.status) }\r\n        //     if (sort === 'a') { tasks.sort((a, b) => a.status - b.status) }\r\n        // }\r\n        // if (keyword !== '') {\r\n        //     tasks = tasks.filter((str) => {\r\n        //         return str.name.toLowerCase().indexOf(keyword) >= 0;\r\n        //     });\r\n        // }\r\n        var checkForm = isDisplayForm === true ? <Form openForm={this.openForm} editTask={editTask} /> : ''\r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <div className=\" row_taitle text-center\">\r\n                        <h3>Quản Lý Công Việc</h3>\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className={isDisplayForm === true ? \"col-md-4\" : \"col-md-0\"}>\r\n                            {checkForm}\r\n                        </div>\r\n                        <div className={isDisplayForm === true ? \"col-md-8\" : \"col-md-12\"}>\r\n                            <div className=\"\" >\r\n                                <h3 className=\"btn btn-primary mx-1\"\r\n                                    onClick={() => this.onAddForm()}\r\n                                >{isDisplayForm === true ? 'Danh sách Công Việc' : 'Thêm Công việc'}</h3>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <Control onSort={this.onSort} onSearch={this.onSearch} />\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <Table\r\n                                        editTask={this.editTask}\r\n                                        onFilter={this.onFilter}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapState = (state) => {\r\n    return {\r\n        isDisplayForm: state.isDisplayForm\r\n    }\r\n}\r\nconst mapDispatch = (dispatch, props) => {\r\n    return {\r\n        onToggoForm: () => {\r\n            dispatch(actions.toggoForm())\r\n        },\r\n\r\n    }\r\n}\r\nexport default connect(mapState, mapDispatch)(Todopro);"]},"metadata":{},"sourceType":"module"}