{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\React\\\\reactnew\\\\src\\\\views\\\\todopro\\\\todopro.js\";\nimport React from \"react\";\nimport \"../../styles/todopro.scss\";\nimport Form from \"../../component/todopro/form\";\nimport Control from \"../../component/todopro/control\";\nimport Table from \"../../component/todopro/table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Todopro extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.id = () => {\n      return Math.floor(Math.random() * 1000000);\n    };\n\n    this.openForm = () => {\n      this.setState({\n        isDisplayForm: true\n      });\n    };\n\n    this.setDefaultForm = () => {\n      this.setState({\n        isDisplayForm: false,\n        editTask: {}\n      });\n    };\n\n    this.onCloseForm = () => {\n      this.setState({\n        isDisplayForm: false\n      });\n    };\n\n    this.onAddForm = () => {\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm,\n        editTask: {}\n      });\n    };\n\n    this.onSubmit = e => {\n      var {\n        tasks\n      } = this.state;\n\n      if (e.id === '') {\n        var task = {\n          id: this.id(),\n          name: e.name,\n          status: e.status === 'true' ? true : false\n        }; // localStorage.setItem('tasks', JSON.stringify(tasks))\n\n        this.setState({\n          tasks: [...this.state.tasks, task]\n        });\n      } else {\n        var index = tasks.findIndex(x => x.id === e.id);\n        tasks[index] = e;\n      }\n\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n      this.setDefaultForm();\n    };\n\n    this.onUpdateStatus = id => {\n      let {\n        tasks\n      } = this.state;\n      var index = tasks.findIndex(x => x.id === id); // if (tasks[index].status === true) {\n      //     tasks[index].status = false\n      // }\n      // else {\n      //     tasks[index].status = true\n      // }\n\n      tasks[index].status = !tasks[index].status;\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.onDeleteTask = id => {\n      let {\n        tasks\n      } = this.state;\n      const curentTasks = tasks.filter(x => x.id !== id);\n      this.setState({\n        tasks: curentTasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n      this.onCloseForm();\n    };\n\n    this.editTask = id => {\n      let {\n        tasks\n      } = this.state;\n      var index = tasks.findIndex(x => x.id === id);\n      var Task = tasks[index];\n      this.setState({\n        editTask: Task\n      });\n      this.openForm();\n    };\n\n    this.onFilter = (filterName, filterStatus) => {\n      // console.log(filterName, filterStatus);\n      filterStatus = parseInt(filterStatus); //console.log();filterStatus\n\n      this.setState({\n        filter: {\n          name: filterName,\n          status: filterStatus\n        }\n      });\n    };\n\n    this.onSort = e => {\n      var onSort = e;\n      this.setState({\n        sort: onSort\n      });\n    };\n\n    this.state = {\n      tasks: [],\n      isDisplayForm: false,\n      editTask: {},\n      filter: {\n        name: '',\n        status: -1\n      },\n      sort: ''\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage && localStorage.getItem('tasks')) {\n      this.setState({\n        tasks: JSON.parse(localStorage.getItem('tasks'))\n      });\n    }\n  }\n\n  render() {\n    var {\n      tasks,\n      editTask,\n      isDisplayForm,\n      filter,\n      sort\n    } = this.state; // console.log(sort);\n\n    var filterName = tasks.filter(str => {\n      return str.name.toLowerCase().indexOf(filter.name.toLowerCase()) >= 0;\n    });\n    tasks = filterName;\n    var filterstatus = tasks.filter(task => {\n      if (filter.status === -1) {\n        return task;\n      } else {\n        return task.status === (filter.status === 0 ? false : true);\n      }\n    }); // console.log(filterstatus);\n\n    tasks = filterstatus; //lọc tìm kiếm trong form tương tự\n    // if (filter) {\n    //     if (filter.name) {\n    //         var tasks = tasks.filter(e => {\n    //             return e.name.toLowerCase().indexOf(filter.name) !== -1\n    //         })\n    //     }\n    // }\n\n    if (sort !== '') {\n      if (sort === 'az') {\n        tasks.sort((a, b) => a.name.localeCompare(b.name));\n      }\n\n      if (sort === 'za') {\n        tasks.sort((a, b) => b.name.localeCompare(a.name));\n      }\n\n      if (sort === 'kh') {\n        tasks.sort((a, b) => b.status - a.status);\n      }\n\n      if (sort === 'a') {\n        tasks.sort((a, b) => Number(b.status) - Number(a.status));\n      }\n    }\n\n    var checkForm = isDisplayForm === true ? /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.onSubmit,\n      onCloseForm: this.onCloseForm,\n      openForm: this.openForm,\n      editTask: editTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 50\n    }, this) : '';\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" row_taitle text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: isDisplayForm === true ? \"col-md-4\" : \"col-md-0\",\n            children: checkForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: isDisplayForm === true ? \"col-md-8\" : \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"btn btn-primary mx-1\",\n                onClick: () => this.onAddForm(),\n                children: isDisplayForm === true ? 'Danh sách Công Việc' : 'Thêm Công việc'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(Control, {\n                onSort: this.onSort\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  tasks: tasks,\n                  onUpdateStatus: this.onUpdateStatus,\n                  onDeleteTask: this.onDeleteTask,\n                  editTask: this.editTask,\n                  onFilter: this.onFilter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Todopro;","map":{"version":3,"sources":["D:/Web/React/reactnew/src/views/todopro/todopro.js"],"names":["React","Form","Control","Table","Todopro","Component","constructor","props","id","Math","floor","random","openForm","setState","isDisplayForm","setDefaultForm","editTask","onCloseForm","onAddForm","state","onSubmit","e","tasks","task","name","status","index","findIndex","x","localStorage","setItem","JSON","stringify","onUpdateStatus","onDeleteTask","curentTasks","filter","Task","onFilter","filterName","filterStatus","parseInt","onSort","sort","componentDidMount","getItem","parse","render","str","toLowerCase","indexOf","filterstatus","a","b","localeCompare","Number","checkForm"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport \"../../styles/todopro.scss\"\r\nimport Form from \"../../component/todopro/form\";\r\nimport Control from \"../../component/todopro/control\";\r\nimport Table from \"../../component/todopro/table\";\r\n\r\nclass Todopro extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tasks: [],\r\n            isDisplayForm: false,\r\n            editTask: {},\r\n            filter: {\r\n                name: '',\r\n                status: -1\r\n            },\r\n            sort: ''\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        if (localStorage && localStorage.getItem('tasks')) {\r\n            this.setState({\r\n                tasks: JSON.parse(localStorage.getItem('tasks'))\r\n            })\r\n        }\r\n    }\r\n    id = () => {\r\n        return Math.floor(Math.random() * 1000000);\r\n    }\r\n    openForm = () => {\r\n        this.setState({\r\n            isDisplayForm: true,\r\n        })\r\n    }\r\n    setDefaultForm = () => {\r\n        this.setState({\r\n            isDisplayForm: false,\r\n            editTask: {}\r\n        })\r\n    }\r\n    onCloseForm = () => {\r\n        this.setState({\r\n            isDisplayForm: false\r\n        })\r\n    }\r\n    onAddForm = () => {\r\n        this.setState({\r\n            isDisplayForm: !this.state.isDisplayForm,\r\n            editTask: {}\r\n        })\r\n    }\r\n    onSubmit = (e) => {\r\n        var { tasks } = this.state\r\n        if (e.id === '') {\r\n            var task = {\r\n                id: this.id(),\r\n                name: e.name,\r\n                status: e.status === 'true' ? true : false\r\n            }\r\n            // localStorage.setItem('tasks', JSON.stringify(tasks))\r\n            this.setState({\r\n                tasks: [...this.state.tasks, task]\r\n            })\r\n        }\r\n        else {\r\n            var index = tasks.findIndex(x => x.id === e.id)\r\n            tasks[index] = e\r\n        }\r\n        localStorage.setItem('tasks', JSON.stringify(tasks))\r\n        this.setDefaultForm()\r\n    }\r\n    onUpdateStatus = (id) => {\r\n        let { tasks } = this.state\r\n        var index = tasks.findIndex(x => x.id === id);\r\n        // if (tasks[index].status === true) {\r\n        //     tasks[index].status = false\r\n        // }\r\n        // else {\r\n        //     tasks[index].status = true\r\n        // }\r\n        tasks[index].status = !tasks[index].status\r\n        this.setState({\r\n            tasks: tasks\r\n        })\r\n        localStorage.setItem('tasks', JSON.stringify(tasks))\r\n    }\r\n    onDeleteTask = (id) => {\r\n        let { tasks } = this.state\r\n        const curentTasks = tasks.filter(x => x.id !== id);\r\n        this.setState({\r\n            tasks: curentTasks\r\n        })\r\n        localStorage.setItem('tasks', JSON.stringify(tasks))\r\n        this.onCloseForm()\r\n\r\n    }\r\n    editTask = (id) => {\r\n        let { tasks } = this.state\r\n        var index = tasks.findIndex(x => x.id === id);\r\n        var Task = tasks[index]\r\n        this.setState({\r\n            editTask: Task\r\n        })\r\n        this.openForm()\r\n    }\r\n    onFilter = (filterName, filterStatus) => {\r\n        // console.log(filterName, filterStatus);\r\n        filterStatus = (parseInt(filterStatus))\r\n        //console.log();filterStatus\r\n\r\n        this.setState({\r\n            filter: {\r\n                name: filterName,\r\n                status: filterStatus\r\n            }\r\n        })\r\n    }\r\n    onSort = (e) => {\r\n        var onSort = e\r\n        this.setState({\r\n            sort: onSort\r\n        })\r\n    }\r\n    render() {\r\n        var { tasks, editTask, isDisplayForm, filter, sort } = this.state\r\n        // console.log(sort);\r\n        var filterName = tasks.filter((str) => {\r\n            return str.name.toLowerCase().indexOf(filter.name.toLowerCase()) >= 0;\r\n        });\r\n        tasks = filterName\r\n        var filterstatus = tasks.filter(task => {\r\n            if (filter.status === -1) {\r\n                return task\r\n            } else {\r\n                return task.status === (filter.status === 0 ? false : true)\r\n            }\r\n        })\r\n        // console.log(filterstatus);\r\n        tasks = filterstatus\r\n        //lọc tìm kiếm trong form tương tự\r\n        // if (filter) {\r\n        //     if (filter.name) {\r\n        //         var tasks = tasks.filter(e => {\r\n        //             return e.name.toLowerCase().indexOf(filter.name) !== -1\r\n        //         })\r\n        //     }\r\n        // }\r\n        if (sort !== '') {\r\n            if (sort === 'az') { tasks.sort((a, b) => a.name.localeCompare(b.name)) }\r\n            if (sort === 'za') { tasks.sort((a, b) => b.name.localeCompare(a.name)) }\r\n            if (sort === 'kh') { tasks.sort((a, b) => b.status - a.status) }\r\n            if (sort === 'a') { tasks.sort((a, b) => Number(b.status) - Number(a.status)) }\r\n        }\r\n        var checkForm = isDisplayForm === true ? <Form onSubmit={this.onSubmit} onCloseForm={this.onCloseForm} openForm={this.openForm} editTask={editTask} /> : ''\r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <div className=\" row_taitle text-center\">\r\n                        <h3>Quản Lý Công Việc</h3>\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className={isDisplayForm === true ? \"col-md-4\" : \"col-md-0\"}>\r\n                            {checkForm}\r\n                        </div>\r\n                        <div className={isDisplayForm === true ? \"col-md-8\" : \"col-md-12\"}>\r\n                            <div className=\"\" >\r\n                                <h3 className=\"btn btn-primary mx-1\"\r\n                                    onClick={() => this.onAddForm()}\r\n                                >{isDisplayForm === true ? 'Danh sách Công Việc' : 'Thêm Công việc'}</h3>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <Control onSort={this.onSort} />\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <Table\r\n                                        tasks={tasks}\r\n                                        onUpdateStatus={this.onUpdateStatus}\r\n                                        onDeleteTask={this.onDeleteTask}\r\n                                        editTask={this.editTask}\r\n                                        onFilter={this.onFilter}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Todopro;"]},"metadata":{},"sourceType":"module"}