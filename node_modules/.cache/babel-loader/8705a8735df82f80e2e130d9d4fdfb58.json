{"ast":null,"code":"import * as types from '../actions/actionTypes';\nvar initState = {\n  name: '',\n  status: -1\n};\n\nvar rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.FILTER_TABLE:\n      var filterName = tasks.filter(str => {\n        return str.name.toLowerCase().indexOf(filter.name.toLowerCase()) >= 0;\n      });\n      tasks = filterName;\n      var filterstatus = tasks.filter(task => {\n        if (filter.status === -1) {\n          return task;\n        } else {\n          return task.status === (filter.status === 0 ? false : true);\n        }\n      }); // console.log(filterstatus);\n\n      tasks = filterstatus;\n      return {\n        name: action.filter.name,\n        status: parseInt(action.filter.status)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["D:/Web/React/reactnew/src/store/reducers/filterTable.js"],"names":["types","initState","name","status","rootReducer","state","action","type","FILTER_TABLE","filterName","tasks","filter","str","toLowerCase","indexOf","filterstatus","task","parseInt"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB;AAEA,IAAIC,SAAS,GAAG;AACZC,EAAAA,IAAI,EAAE,EADM;AAEZC,EAAAA,MAAM,EAAE,CAAC;AAFG,CAAhB;;AAIA,IAAIC,WAAW,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAtBJ,SAAsB;AAAA,MAAXK,MAAW;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,KAAK,CAACQ,YAAX;AACI,UAAIC,UAAU,GAAGC,KAAK,CAACC,MAAN,CAAcC,GAAD,IAAS;AACnC,eAAOA,GAAG,CAACV,IAAJ,CAASW,WAAT,GAAuBC,OAAvB,CAA+BH,MAAM,CAACT,IAAP,CAAYW,WAAZ,EAA/B,KAA6D,CAApE;AACH,OAFgB,CAAjB;AAGAH,MAAAA,KAAK,GAAGD,UAAR;AACA,UAAIM,YAAY,GAAGL,KAAK,CAACC,MAAN,CAAaK,IAAI,IAAI;AACpC,YAAIL,MAAM,CAACR,MAAP,KAAkB,CAAC,CAAvB,EAA0B;AACtB,iBAAOa,IAAP;AACH,SAFD,MAEO;AACH,iBAAOA,IAAI,CAACb,MAAL,MAAiBQ,MAAM,CAACR,MAAP,KAAkB,CAAlB,GAAsB,KAAtB,GAA8B,IAA/C,CAAP;AACH;AACJ,OANkB,CAAnB,CALJ,CAYI;;AACAO,MAAAA,KAAK,GAAGK,YAAR;AACA,aAAO;AACHb,QAAAA,IAAI,EAAEI,MAAM,CAACK,MAAP,CAAcT,IADjB;AAEHC,QAAAA,MAAM,EAAEc,QAAQ,CAACX,MAAM,CAACK,MAAP,CAAcR,MAAf;AAFb,OAAP;;AAKJ;AACI,aAAOE,KAAP;AArBR;AAuBH,CAxBD;;AAyBA,eAAeD,WAAf","sourcesContent":["import * as types from '../actions/actionTypes'\r\n\r\nvar initState = {\r\n    name: '',\r\n    status: -1\r\n};\r\nvar rootReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.FILTER_TABLE:\r\n            var filterName = tasks.filter((str) => {\r\n                return str.name.toLowerCase().indexOf(filter.name.toLowerCase()) >= 0;\r\n            });\r\n            tasks = filterName\r\n            var filterstatus = tasks.filter(task => {\r\n                if (filter.status === -1) {\r\n                    return task\r\n                } else {\r\n                    return task.status === (filter.status === 0 ? false : true)\r\n                }\r\n            })\r\n            // console.log(filterstatus);\r\n            tasks = filterstatus\r\n            return {\r\n                name: action.filter.name,\r\n                status: parseInt(action.filter.status)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}