{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\reactnew\\\\src\\\\views\\\\todos\\\\listTodo.js\";\nimport React from \"react\";\nimport './listTodo.scss';\nimport AddTodo from \"./addTodo\";\nimport { toast } from 'react-toastify';\nimport Color from \"../HOC/color\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ListTodo extends React.Component {\n  constructor(props) {\n    super(props); // Don't call this.setState() here!\n\n    this.addNewtodo = todo => {\n      this.setState({\n        ListTodos: [...this.state.ListTodos, todo]\n      });\n      toast.success(\"Wow so easy!\");\n    };\n\n    this.onDeletetodo = item => {\n      let curentTodo = this.state.ListTodos;\n      curentTodo = curentTodo.filter(todo => todo.id !== item.id);\n      this.setState({\n        ListTodos: curentTodo\n      });\n    };\n\n    this.clickEdit = todo => {\n      let {\n        edittodo,\n        ListTodos\n      } = this.state;\n      let isEmptyObj = Object.keys(edittodo).length === 0;\n\n      if (isEmptyObj === false && edittodo.id === todo.id) {\n        var updatedOSArray = [...ListTodos];\n        let objIndex = updatedOSArray.findIndex(obj => obj.id === todo.id); //Log object to Console.\n\n        console.log(\"Before update: \", updatedOSArray[objIndex]); //Update object's name property.\n\n        updatedOSArray[objIndex].title = edittodo.title;\n        this.setState({\n          ListTodos: updatedOSArray,\n          edittodo: {}\n        });\n        return;\n      }\n\n      this.setState({\n        edittodo: todo\n      });\n    };\n\n    this.onChangeedit = event => {\n      var edittodonew = { ...this.state.edittodo\n      };\n      edittodonew.title = event.target.value;\n      this.setState({\n        edittodo: edittodonew\n      });\n    };\n\n    this.state = {\n      ListTodos: [{\n        id: 'todo1',\n        title: 'doing homework'\n      }, {\n        id: 'todo2',\n        title: 'video calls'\n      }, {\n        id: 'todo3',\n        title: 'fixs bugs'\n      }],\n      edittodo: {}\n    };\n  }\n\n  render() {\n    var edittodo = this.state.edittodo;\n    let ListTodos = this.state.ListTodos; // = let{listTodo} =this.state.ListTodo\n\n    let isEmptyObj = Object.keys(edittodo).length === 0; // console.log('check empty', isEmptyObj); check rỗng or không rỗng true:false\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"List Todo by Nguy\\u1EC5n Th\\xE0nh C\\xF4ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Container\",\n        children: [/*#__PURE__*/_jsxDEV(AddTodo, {\n          addNewtodo: this.addNewtodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-list-todo\",\n          children: ListTodos && ListTodos.length > 0 && ListTodos.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"todo-list\",\n              children: [isEmptyObj === true ? /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [index + 1, \"-\", item.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: edittodo.id === item.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\" \", index + 1, \"-\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    value: edittodo.title,\n                    onChange: event => this.onChangeedit(event)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 70\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 49\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [index + 1, \"-\", item.title]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit\",\n                onClick: () => this.clickEdit(item),\n                children: isEmptyObj === false && edittodo.id === item.id ? 'save' : 'edit'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete\",\n                onClick: () => this.onDeletetodo(item),\n                children: \"delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 37\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default _c = Color(ListTodo);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["D:/Web/reactnew/src/views/todos/listTodo.js"],"names":["React","AddTodo","toast","Color","ListTodo","Component","constructor","props","addNewtodo","todo","setState","ListTodos","state","success","onDeletetodo","item","curentTodo","filter","id","clickEdit","edittodo","isEmptyObj","Object","keys","length","updatedOSArray","objIndex","findIndex","obj","console","log","title","onChangeedit","event","edittodonew","target","value","render","map","index"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport './listTodo.scss'\r\nimport AddTodo from \"./addTodo\";\r\nimport { toast } from 'react-toastify';\r\nimport Color from \"../HOC/color\";\r\n\r\nclass ListTodo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // Don't call this.setState() here!\r\n        this.state = {\r\n            ListTodos: [\r\n                { id: 'todo1', title: 'doing homework' },\r\n                { id: 'todo2', title: 'video calls' },\r\n                { id: 'todo3', title: 'fixs bugs' },\r\n            ],\r\n            edittodo: {\r\n\r\n            }\r\n        };\r\n\r\n    }\r\n    addNewtodo = (todo) => {\r\n        this.setState({\r\n            ListTodos: [...this.state.ListTodos, todo],\r\n        })\r\n        toast.success(\"Wow so easy!\");\r\n\r\n    }\r\n    onDeletetodo = (item) => {\r\n        let curentTodo = this.state.ListTodos\r\n        curentTodo = curentTodo.filter(todo => todo.id !== item.id)\r\n        this.setState({\r\n            ListTodos: curentTodo\r\n        })\r\n    }\r\n    clickEdit = (todo) => {\r\n        let { edittodo, ListTodos } = this.state\r\n        let isEmptyObj = Object.keys(edittodo).length === 0;\r\n        if (isEmptyObj === false && edittodo.id === todo.id) {\r\n\r\n            var updatedOSArray = [...ListTodos];\r\n\r\n            let objIndex = updatedOSArray.findIndex((obj => obj.id === todo.id));\r\n\r\n            //Log object to Console.\r\n            console.log(\"Before update: \", updatedOSArray[objIndex])\r\n\r\n            //Update object's name property.\r\n            updatedOSArray[objIndex].title = edittodo.title\r\n\r\n\r\n            this.setState({\r\n                ListTodos: updatedOSArray,\r\n                edittodo: {}\r\n            })\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            edittodo: todo\r\n        })\r\n    }\r\n\r\n    onChangeedit = (event) => {\r\n        var edittodonew = { ...this.state.edittodo }\r\n        edittodonew.title = event.target.value\r\n        this.setState({\r\n            edittodo: edittodonew\r\n        })\r\n    }\r\n    render() {\r\n        var edittodo = this.state.edittodo;\r\n        let ListTodos = this.state.ListTodos;// = let{listTodo} =this.state.ListTodo\r\n\r\n\r\n        let isEmptyObj = Object.keys(edittodo).length === 0;\r\n        // console.log('check empty', isEmptyObj); check rỗng or không rỗng true:false\r\n        return (\r\n            <>\r\n                <p>\r\n                    List Todo by Nguyễn Thành Công\r\n                </p>\r\n                <div className=\"Container\">\r\n                    <AddTodo addNewtodo={this.addNewtodo} />\r\n                    <div className=\"content-list-todo\">\r\n                        {ListTodos && ListTodos.length > 0 && ListTodos.map((item, index) => {\r\n                            return (\r\n                                <div className=\"todo-list\" key={item.id}>\r\n\r\n                                    {isEmptyObj === true ?\r\n                                        <span>{index + 1}-{item.title}</span>\r\n                                        :\r\n                                        <>\r\n                                            {edittodo.id === item.id ?\r\n                                                < span > {index + 1}-<input\r\n                                                    value={edittodo.title}\r\n                                                    onChange={(event) => this.onChangeedit(event)} /> </span>\r\n                                                :\r\n                                                <span>{index + 1}-{item.title}</span>\r\n                                            }\r\n                                        </>\r\n\r\n                                    }\r\n                                    <button className=\"edit\"\r\n                                        onClick={() => this.clickEdit(item)}  >\r\n                                        {isEmptyObj === false && edittodo.id === item.id ? 'save' : 'edit'}\r\n                                    </button>\r\n                                    <button className=\"delete\" onClick={() => this.onDeletetodo(item)} >delete</button>\r\n\r\n                                </div>\r\n                            )\r\n                        })}\r\n\r\n                    </div>\r\n                </div >\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Color(ListTodo)\r\n\r\n"]},"metadata":{},"sourceType":"module"}