{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\React\\\\reactnew\\\\src\\\\component\\\\todopro\\\\form.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux'; // import table from \"./table\";\n\nimport * as actions from '../../store/actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.closeForm = () => {\n      this.props.onCloseForm();\n    };\n\n    this.onChange = event => {\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.onAddtask(this.state);\n      this.deleteIpnutForm();\n    };\n\n    this.deleteIpnutForm = () => {\n      this.setState({\n        name: '',\n        status: false\n      });\n    };\n\n    this.state = {\n      id: '',\n      name: '',\n      status: true\n    };\n  }\n\n  componentDidMount() {\n    let obj = this.props.editTask;\n    var checkObj = Object.keys(obj).length === 0 && obj.constructor === Object;\n\n    if (!checkObj) {\n      this.setState({\n        id: this.props.editTask.id,\n        name: this.props.editTask.name,\n        status: this.props.editTask.status\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.editTask !== prevProps.editTask) {\n      this.setState({\n        id: this.props.editTask.id,\n        name: this.props.editTask.name,\n        status: this.props.editTask.status\n      });\n    }\n  }\n\n  render() {\n    var {\n      name,\n      status,\n      id\n    } = this.state;\n    var yes = true;\n    var no = false;\n    if (!this.props.isDisplayForm) return '';\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" panel_heading \",\n          onClick: () => this.closeForm(),\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: id !== '' ? 'Sửa Công Việc' : 'Thêm công việc'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel_body\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"T\\xEAn:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                name: \"name\",\n                value: name,\n                onChange: e => this.onChange(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 74\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Tr\\u1EA1ng thai:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 60\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"inputState\",\n                className: \"form-control\",\n                name: \"status\",\n                value: status,\n                onChange: e => this.onChange(e),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: no,\n                  children: \"\\u1EA8n\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: yes,\n                  children: \"K\\xEDch ho\\u1EA1t\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"panel_form_button\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-warning\",\n                children: \"L\\u01B0u\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-danger\",\n                onClick: () => {\n                  this.deleteIpnutForm();\n                },\n                children: \"H\\u1EE7y\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nvar mapState = state => {\n  return {\n    isDisplayForm: state.isDisplayForm\n  };\n};\n\nvar mapDispatch = (dispatch, props) => {\n  return {\n    onAddtask: task => {\n      dispatch(actions.addTask(task));\n    },\n    onCloseForm: () => {\n      dispatch(actions.closeForm());\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(Form);","map":{"version":3,"sources":["D:/Web/React/reactnew/src/component/todopro/form.js"],"names":["React","connect","actions","Form","Component","constructor","props","closeForm","onCloseForm","onChange","event","target","value","name","setState","handleSubmit","preventDefault","onAddtask","state","deleteIpnutForm","status","id","componentDidMount","obj","editTask","checkObj","Object","keys","length","componentDidUpdate","prevProps","prevState","render","yes","no","isDisplayForm","e","mapState","mapDispatch","dispatch","task","addTask"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport { connect } from 'react-redux'\r\n// import table from \"./table\";\r\nimport * as actions from '../../store/actions/index'\r\nclass Form extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            name: '',\r\n            status: true\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let obj = this.props.editTask\r\n        var checkObj = Object.keys(obj).length === 0 && obj.constructor === Object\r\n        if (!checkObj) {\r\n            this.setState({\r\n                id: this.props.editTask.id,\r\n                name: this.props.editTask.name,\r\n                status: this.props.editTask.status\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.editTask !== prevProps.editTask) {\r\n            this.setState({\r\n                id: this.props.editTask.id,\r\n                name: this.props.editTask.name,\r\n                status: this.props.editTask.status,\r\n            })\r\n        }\r\n    }\r\n    closeForm = () => {\r\n        this.props.onCloseForm()\r\n    }\r\n    onChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value\r\n        const name = target.name\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        this.props.onAddtask(this.state)\r\n        this.deleteIpnutForm()\r\n\r\n    }\r\n    deleteIpnutForm = () => {\r\n        this.setState({\r\n            name: '',\r\n            status: false\r\n        })\r\n    }\r\n    render() {\r\n        var { name, status, id } = this.state\r\n        var yes = true\r\n        var no = false\r\n        if (!this.props.isDisplayForm) return '';\r\n        return (\r\n            <>\r\n                <div className=\"panel\">\r\n                    <div className=\" panel_heading \" onClick={() => this.closeForm()}>\r\n                        <h3>{id !== '' ? 'Sửa Công Việc' : 'Thêm công việc'}</h3>\r\n                    </div>\r\n                    <div className=\"panel_body\">\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label >Tên:</label><br />\r\n                                <input type=\"text\" className=\"form-control\"\r\n                                    name=\"name\"\r\n                                    value={name}\r\n                                    onChange={(e) => this.onChange(e)} /><br />\r\n                                <label >Trạng thai:</label><br />\r\n                                <select id=\"inputState\" className=\"form-control\"\r\n                                    name=\"status\"\r\n                                    value={status}\r\n                                    onChange={(e) => this.onChange(e)}\r\n                                >\r\n                                    <option value={no}>Ẩn</option>\r\n                                    <option value={yes}>Kích hoạt</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"panel_form_button\">\r\n                                <button type=\"submit\" className=\"btn btn-warning\"\r\n                                >Lưu</button>\r\n                                <button type=\"button\" className=\"btn btn-danger\" onClick={() => { this.deleteIpnutForm() }}>Hủy</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nvar mapState = state => {\r\n    return {\r\n\r\n        isDisplayForm: state.isDisplayForm\r\n    }\r\n}\r\nvar mapDispatch = (dispatch, props) => {\r\n    return {\r\n        onAddtask: (task) => {\r\n            dispatch(actions.addTask(task))\r\n        },\r\n        onCloseForm: () => {\r\n            dispatch(actions.closeForm())\r\n        }\r\n    }\r\n}\r\nexport default connect(mapState, mapDispatch)(Form)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}