{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\React\\\\reactnew\\\\src\\\\component\\\\todopro\\\\table.js\";\nimport Item from \"./item\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeFillter = e => {\n      var target = e.target;\n      var name = target.name;\n      var value = target.value; // this.props.onFilter(\n      //     name === 'filterName' ? value : this.state.filterName,\n      //     name === 'filterStatus' ? value : this.state.filterStatus\n      // )\n\n      this.props.onFilterTable(name === 'filterName' ? value : this.state.filterName, name === 'filterStatus' ? value : this.state.filterStatus);\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      filterName: '',\n      filterStatus: -1\n    };\n  }\n\n  render() {\n    var {\n      filterName,\n      filterStatus\n    } = this.state;\n    var {\n      tasks\n    } = this.props; // var objempty = Object.keys(taskEdit).length === 0\n\n    var elmTasks = tasks.map((task, index) => {\n      return /*#__PURE__*/_jsxDEV(Item, {\n        index: index,\n        task: task\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered table-hover\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-center\",\n            children: \"STT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-center\",\n            children: \"T\\xEAn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-center\",\n            children: \"Tr\\u1EA1ng th\\xE1i\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"text-center\",\n            children: \"H\\xE0nh \\u0111\\u1ED9ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"filterName\",\n              value: filterName,\n              onChange: e => {\n                this.onChangeFillter(e);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"inputState\",\n              className: \"form-control\",\n              name: \"filterStatus\",\n              value: filterStatus,\n              onChange: e => {\n                this.onChangeFillter(e);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: -1,\n                children: \"T\\u1EA5t c\\u1EA3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 0,\n                children: \"\\u1EA8n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: 1,\n                children: \"K\\xEDch ho\\u1EA1t\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), elmTasks]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    tasks: state.tasks\n  };\n};\n\nconst mapDispatch = (dispatch, props) => {\n  return {\n    onFilterTable: filter => {\n      dispatch(actions.filterTask(filter));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(Table);","map":{"version":3,"sources":["D:/Web/React/reactnew/src/component/todopro/table.js"],"names":["Item","React","connect","actions","Table","Component","constructor","props","onChangeFillter","e","target","name","value","onFilterTable","state","filterName","filterStatus","setState","render","tasks","elmTasks","map","task","index","id","mapState","mapDispatch","dispatch","filter","filterTask"],"mappings":"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","sourcesContent":["\r\nimport Item from \"./item\"\r\nimport React from \"react\"\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../store/actions/index'\r\n\r\nclass Table extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filterName: '',\r\n            filterStatus: -1\r\n        }\r\n\r\n    }\r\n    onChangeFillter = (e) => {\r\n        var target = e.target\r\n        var name = target.name\r\n        var value = target.value\r\n        // this.props.onFilter(\r\n        //     name === 'filterName' ? value : this.state.filterName,\r\n        //     name === 'filterStatus' ? value : this.state.filterStatus\r\n        // )\r\n        this.props.onFilterTable(\r\n            name === 'filterName' ? value : this.state.filterName,\r\n            name === 'filterStatus' ? value : this.state.filterStatus\r\n        )\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        var { filterName, filterStatus } = this.state\r\n        var { tasks } = this.props\r\n        // var objempty = Object.keys(taskEdit).length === 0\r\n        var elmTasks = tasks.map((task, index) => {\r\n            return <Item key=\r\n                {task.id}\r\n                index={index}\r\n                task={task}\r\n            />\r\n        })\r\n\r\n        return (\r\n            <table className=\"table table-bordered table-hover\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"text-center\">STT</th>\r\n                        <th className=\"text-center\">Tên</th>\r\n                        <th className=\"text-center\">Trạng thái</th>\r\n                        <th className=\"text-center\">Hành động</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td><input type=\"text\" className=\"form-control\"\r\n                            name=\"filterName\"\r\n                            value={filterName}\r\n                            onChange={(e) => { this.onChangeFillter(e) }}\r\n                        /></td>\r\n                        <td>\r\n                            <select id=\"inputState\" className=\"form-control\"\r\n                                name=\"filterStatus\"\r\n                                value={filterStatus}\r\n                                onChange={(e) => { this.onChangeFillter(e) }}\r\n                            >\r\n                                <option value={-1}>Tất cả</option>\r\n                                <option value={0}>Ẩn</option>\r\n                                <option value={1}>Kích hoạt</option>\r\n                            </select>\r\n                        </td>\r\n                        <td></td>\r\n                    </tr>\r\n                    {elmTasks}\r\n                </tbody>\r\n\r\n            </table>\r\n        )\r\n    }\r\n}\r\nconst mapState = (state) => {\r\n    return {\r\n        tasks: state.tasks\r\n    }\r\n}\r\nconst mapDispatch = (dispatch, props) => {\r\n    return {\r\n        onFilterTable: (filter) => {\r\n            dispatch(actions.filterTask(filter))\r\n        },\r\n\r\n    }\r\n}\r\nexport default connect(mapState, mapDispatch)(Table);"]},"metadata":{},"sourceType":"module"}