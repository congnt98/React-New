{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web\\\\React\\\\reactnew\\\\src\\\\views\\\\todopro\\\\todopro.js\";\nimport React from \"react\";\nimport \"../../styles/todopro.scss\";\nimport Form from \"../../component/todopro/form\";\nimport Control from \"../../component/todopro/control\";\nimport Table from \"../../component/todopro/table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Todopro extends React.Component {\n  constructor(props) {\n    super(props); // Don't call this.setState() here!\n\n    this.id = () => {\n      return Math.floor(Math.random() * 1000000);\n    };\n\n    this.openForm = () => {\n      this.setState({\n        isDisplayForm: true\n      });\n    };\n\n    this.onCloseForm = () => {\n      this.setState({\n        isDisplayForm: false\n      });\n    };\n\n    this.onAddForm = () => {\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm\n      });\n    };\n\n    this.onSubmit = e => {\n      var {\n        tasks\n      } = this.state;\n      var index = tasks.findIndex(x => x.id === id);\n      var editTask = tasks[index];\n      this.setState({\n        tasks: [...this.state.tasks, ta]\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks)); // var task = {\n      //     id: this.id(),\n      //     name: e.name,\n      //     status: e.status === 'true' ? true : false\n      // }\n      // this.setState({\n      //     tasks: [...this.state.tasks, task]\n      // })\n      // localStorage.setItem('tasks', JSON.stringify(tasks))\n    };\n\n    this.onUpdateStatus = id => {\n      let {\n        tasks\n      } = this.state;\n      var index = tasks.findIndex(x => x.id === id);\n      tasks[index].status = !tasks[index].status;\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.onDeleteTask = id => {\n      let {\n        tasks\n      } = this.state;\n      const curentTasks = tasks.filter(x => x.id !== id);\n      this.setState({\n        tasks: curentTasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n      this.onCloseForm();\n    };\n\n    this.editTask = id => {\n      let {\n        tasks\n      } = this.state;\n      var index = tasks.findIndex(x => x.id === id);\n      var Task = tasks[index];\n      this.setState({\n        editTask: Task\n      });\n      this.openForm();\n    };\n\n    this.state = {\n      tasks: [],\n      isDisplayForm: false,\n      editTask: {}\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage && localStorage.getItem('tasks')) {\n      this.setState({\n        tasks: JSON.parse(localStorage.getItem('tasks'))\n      });\n    }\n  }\n\n  render() {\n    var {\n      tasks,\n      editTask,\n      isDisplayForm\n    } = this.state;\n    var checkForm = isDisplayForm === true ? /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.onSubmit,\n      onCloseForm: this.onCloseForm,\n      openForm: this.openForm,\n      editTask: editTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 50\n    }, this) : '';\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" row_taitle text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: isDisplayForm === true ? \"col-md-4\" : \"col-md-0\",\n            children: checkForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: isDisplayForm === true ? \"col-md-8\" : \"col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"btn btn-primary mx-1\",\n                onClick: () => this.onAddForm(),\n                children: isDisplayForm === true ? 'Danh sách Công Việc' : 'Thêm Công việc'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(Control, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col\",\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  tasks: tasks,\n                  onUpdateStatus: this.onUpdateStatus,\n                  onDeleteTask: this.onDeleteTask,\n                  editTask: this.editTask\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Todopro;","map":{"version":3,"sources":["D:/Web/React/reactnew/src/views/todopro/todopro.js"],"names":["React","Form","Control","Table","Todopro","Component","constructor","props","id","Math","floor","random","openForm","setState","isDisplayForm","onCloseForm","onAddForm","state","onSubmit","e","tasks","index","findIndex","x","editTask","ta","localStorage","setItem","JSON","stringify","onUpdateStatus","status","onDeleteTask","curentTasks","filter","Task","componentDidMount","getItem","parse","render","checkForm"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport \"../../styles/todopro.scss\"\r\nimport Form from \"../../component/todopro/form\";\r\nimport Control from \"../../component/todopro/control\";\r\nimport Table from \"../../component/todopro/table\";\r\n\r\nclass Todopro extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // Don't call this.setState() here!\r\n        this.state = {\r\n            tasks: [],\r\n            isDisplayForm: false,\r\n            editTask: {}\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        if (localStorage && localStorage.getItem('tasks')) {\r\n            this.setState({\r\n                tasks: JSON.parse(localStorage.getItem('tasks'))\r\n            })\r\n        }\r\n    }\r\n    id = () => {\r\n        return Math.floor(Math.random() * 1000000);\r\n    }\r\n    openForm = () => {\r\n        this.setState({\r\n            isDisplayForm: true\r\n        })\r\n    }\r\n    onCloseForm = () => {\r\n        this.setState({\r\n            isDisplayForm: false\r\n        })\r\n    }\r\n    onAddForm = () => {\r\n        this.setState({\r\n            isDisplayForm: !this.state.isDisplayForm\r\n        })\r\n    }\r\n    onSubmit = (e) => {\r\n        var { tasks } = this.state\r\n\r\n        var index = tasks.findIndex(x => x.id === id);\r\n        var editTask = tasks[index]\r\n        this.setState({\r\n            tasks: [...this.state.tasks, ta]\r\n        })\r\n        localStorage.setItem('tasks', JSON.stringify(tasks))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // var task = {\r\n        //     id: this.id(),\r\n        //     name: e.name,\r\n        //     status: e.status === 'true' ? true : false\r\n        // }\r\n        // this.setState({\r\n        //     tasks: [...this.state.tasks, task]\r\n        // })\r\n        // localStorage.setItem('tasks', JSON.stringify(tasks))\r\n    }\r\n\r\n    onUpdateStatus = (id) => {\r\n        let { tasks } = this.state\r\n        var index = tasks.findIndex(x => x.id === id);\r\n        tasks[index].status = !tasks[index].status;\r\n        this.setState({\r\n            tasks: tasks\r\n        })\r\n        localStorage.setItem('tasks', JSON.stringify(tasks))\r\n    }\r\n    onDeleteTask = (id) => {\r\n        let { tasks } = this.state\r\n        const curentTasks = tasks.filter(x => x.id !== id);\r\n        this.setState({\r\n            tasks: curentTasks\r\n        })\r\n        localStorage.setItem('tasks', JSON.stringify(tasks))\r\n        this.onCloseForm()\r\n\r\n    }\r\n    editTask = (id) => {\r\n        let { tasks } = this.state\r\n        var index = tasks.findIndex(x => x.id === id);\r\n        var Task = tasks[index]\r\n        this.setState({\r\n            editTask: Task\r\n        })\r\n        this.openForm()\r\n    }\r\n    render() {\r\n        var { tasks, editTask, isDisplayForm } = this.state\r\n        var checkForm = isDisplayForm === true ? <Form onSubmit={this.onSubmit} onCloseForm={this.onCloseForm} openForm={this.openForm} editTask={editTask} /> : ''\r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <div className=\" row_taitle text-center\">\r\n                        <h3>Quản Lý Công Việc</h3>\r\n                        <hr />\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className={isDisplayForm === true ? \"col-md-4\" : \"col-md-0\"}>\r\n                            {checkForm}\r\n                        </div>\r\n                        <div className={isDisplayForm === true ? \"col-md-8\" : \"col-md-12\"}>\r\n                            <div className=\"\" >\r\n                                <h3 className=\"btn btn-primary mx-1\"\r\n                                    onClick={() => this.onAddForm()}\r\n                                >{isDisplayForm === true ? 'Danh sách Công Việc' : 'Thêm Công việc'}</h3>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <Control />\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col\">\r\n                                    <Table\r\n                                        tasks={tasks}\r\n                                        onUpdateStatus={this.onUpdateStatus}\r\n                                        onDeleteTask={this.onDeleteTask}\r\n                                        editTask={this.editTask}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                {/* <div className=\"container\">\r\n                    <div className=\"row_taitle text-center\">\r\n                        <h3>Quản Lý Công Việc</h3>\r\n                        <hr />\r\n                    </div>\r\n                    <button className=\"btn btn-primary\">Thêm Công Việc</button>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"input-group mt-3\">\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"nhập tìm kiếm...\" />\r\n                                <div className=\"button-group\">\r\n                                    <button type=\"button\" className=\"btn btn-primary\">Tìm</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"dropdown mt-3\">\r\n                                <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\"\r\n                                    data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    Sắp Xếp\r\n                                </button>\r\n                                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                    <a className=\"dropdown-item\" href=\"#\">A-Z</a>\r\n                                    <a className=\"dropdown-item\" href=\"#\">Z-A</a>\r\n                                    <a className=\"divider\">\r\n                                        <hr />\r\n                                    </a>\r\n                                    <a className=\"dropdown-item\" href=\"#\">Trạng Thái Kích Hoạt </a>\r\n                                    <a className=\"dropdown-item\" href=\"#\">Trạng Thái ẨN</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\" row mt-3\">\r\n                        <div className=\"col\">\r\n                            <table className=\"table table-bordered table-hover\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className=\"text-center\">STT</th>\r\n                                        <th className=\"text-center\">Tên</th>\r\n                                        <th className=\"text-center\">Trạng thái</th>\r\n                                        <th className=\"text-center\">Hành động</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td></td>\r\n                                        <td><input type=\"text\" className=\"form-control\" /></td>\r\n                                        <td>\r\n                                            <select id=\"inputState\" className=\"form-control\">\r\n                                                <option value={-1}>Tất cả</option>\r\n                                                <option value={0}>Ẩn</option>\r\n                                                <option value={1}>Hiện</option>\r\n                                            </select>\r\n                                        </td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                </tbody>\r\n\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div> */}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Todopro;"]},"metadata":{},"sourceType":"module"}