{"ast":null,"code":"import * as types from '../actions/actionTypes';\n\nvar id = () => {\n  return Math.floor(Math.random() * 1000000);\n};\n\nvar data = JSON.parse(localStorage.getItem('tasks'));\nvar initState = data ? data : [];\n\nvar rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.LIST_ALL:\n      return state;\n\n    case types.ADD_TASK:\n      var newTask = {\n        id: id,\n        name: action.task.name,\n        status: action.task.status === 'true' ? true : false\n      };\n      state = [...state, newTask];\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n      return [...state];\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["D:/Web/React/reactnew/src/store/reducers/tasks.js"],"names":["types","id","Math","floor","random","data","JSON","parse","localStorage","getItem","initState","rootReducer","state","action","type","LIST_ALL","ADD_TASK","newTask","name","task","status","setItem","stringify","tasks"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB;;AAGA,IAAIC,EAAE,GAAG,MAAM;AACX,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,OAA3B,CAAP;AACH,CAFD;;AAGA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAX;AAEA,IAAIC,SAAS,GAAGL,IAAI,GAAGA,IAAH,GAAU,EAA9B;;AACA,IAAIM,WAAW,GAAG,YAA+B;AAAA,MAA9BC,KAA8B,uEAAtBF,SAAsB;AAAA,MAAXG,MAAW;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKd,KAAK,CAACe,QAAX;AACI,aAAOH,KAAP;;AACJ,SAAKZ,KAAK,CAACgB,QAAX;AACI,UAAIC,OAAO,GAAG;AACVhB,QAAAA,EAAE,EAAEA,EADM;AAEViB,QAAAA,IAAI,EAAEL,MAAM,CAACM,IAAP,CAAYD,IAFR;AAGVE,QAAAA,MAAM,EAAEP,MAAM,CAACM,IAAP,CAAYC,MAAZ,KAAuB,MAAvB,GAAgC,IAAhC,GAAuC;AAHrC,OAAd;AAKAR,MAAAA,KAAK,GAAG,CAAC,GAAGA,KAAJ,EAAWK,OAAX,CAAR;AACAT,MAAAA,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8Bf,IAAI,CAACgB,SAAL,CAAeC,KAAf,CAA9B;AACA,aAAO,CAAC,GAAGX,KAAJ,CAAP;;AACJ;AACI,aAAOA,KAAP;AAbR;AAeH,CAhBD;;AAiBA,eAAeD,WAAf","sourcesContent":["import * as types from '../actions/actionTypes'\r\n\r\n\r\nvar id = () => {\r\n    return Math.floor(Math.random() * 1000000);\r\n}\r\nvar data = JSON.parse(localStorage.getItem('tasks'))\r\n\r\nvar initState = data ? data : []\r\nvar rootReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case types.LIST_ALL:\r\n            return state\r\n        case types.ADD_TASK:\r\n            var newTask = {\r\n                id: id,\r\n                name: action.task.name,\r\n                status: action.task.status === 'true' ? true : false\r\n            }\r\n            state = [...state, newTask]\r\n            localStorage.setItem('tasks', JSON.stringify(tasks));\r\n            return [...state]\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}