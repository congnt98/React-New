{"ast":null,"code":"import _objectSpread from\"D:/Web/React/reactnew/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"D:/Web/React/reactnew/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import*as types from'../actions/actionTypes';var ranDomId=function ranDomId(){return Math.floor(Math.random()*1000000);};var data=JSON.parse(localStorage.getItem('tasks'));var initState=data?data:[];var rootReducer=function rootReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initState;var action=arguments.length>1?arguments[1]:undefined;var id='';var index=-1;switch(action.type){case types.LIST_ALL:return state;case types.SAVE_TASK:var task={id:action.task.id,name:action.task.name,status:action.task.status==='true'||action.task.status===true?true:false};if(!task.id){task.id=ranDomId();state.push(task);// [...state,task]\n}else{index=state.findIndex(function(x){return x.id===task.id;});state[index]=task;}localStorage.setItem('tasks',JSON.stringify(state));return _toConsumableArray(state);case types.UPDATE_STATUS_TASK:id=action.id;index=state.findIndex(function(x){return x.id===id;});// state[index].status = !state[index].status\nstate[index]=_objectSpread(_objectSpread({},state[index]),{},{status:!state[index].status});localStorage.setItem('tasks',JSON.stringify(state));return _toConsumableArray(state);case types.DELETE_TASK:var curentTasks=state.filter(function(x){return x.id!==action.id;});// var index = state.findIndex(x => x.id === id)\nstate=curentTasks;localStorage.setItem('tasks',JSON.stringify(state));return _toConsumableArray(state);default:return state;}};export default rootReducer;","map":{"version":3,"sources":["D:/Web/React/reactnew/src/store/reducers/tasks.js"],"names":["types","ranDomId","Math","floor","random","data","JSON","parse","localStorage","getItem","initState","rootReducer","state","action","id","index","type","LIST_ALL","SAVE_TASK","task","name","status","push","findIndex","x","setItem","stringify","UPDATE_STATUS_TASK","DELETE_TASK","curentTasks","filter"],"mappings":"6NAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,wBAAvB,CAEA,GAAIC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACjB,MAAOC,CAAAA,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,OAA3B,CAAP,CACH,CAFD,CAGA,GAAIC,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAX,CACA,GAAIC,CAAAA,SAAS,CAAGL,IAAI,CAAGA,IAAH,CAAU,EAA9B,CACA,GAAIM,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAA+B,IAA9BC,CAAAA,KAA8B,2DAAtBF,SAAsB,IAAXG,CAAAA,MAAW,2CAC7C,GAAIC,CAAAA,EAAE,CAAG,EAAT,CACA,GAAIC,CAAAA,KAAK,CAAG,CAAC,CAAb,CACA,OAAQF,MAAM,CAACG,IAAf,EACI,IAAKhB,CAAAA,KAAK,CAACiB,QAAX,CACI,MAAOL,CAAAA,KAAP,CACJ,IAAKZ,CAAAA,KAAK,CAACkB,SAAX,CACI,GAAIC,CAAAA,IAAI,CAAG,CACPL,EAAE,CAAED,MAAM,CAACM,IAAP,CAAYL,EADT,CAEPM,IAAI,CAAEP,MAAM,CAACM,IAAP,CAAYC,IAFX,CAGPC,MAAM,CAAGR,MAAM,CAACM,IAAP,CAAYE,MAAZ,GAAuB,MAAvB,EAAiCR,MAAM,CAACM,IAAP,CAAYE,MAAZ,GAAuB,IAAzD,CAAiE,IAAjE,CAAwE,KAHzE,CAAX,CAKA,GAAI,CAACF,IAAI,CAACL,EAAV,CAAc,CACVK,IAAI,CAACL,EAAL,CAAUb,QAAQ,EAAlB,CACAW,KAAK,CAACU,IAAN,CAAWH,IAAX,EAAiB;AACpB,CAHD,IAGO,CACHJ,KAAK,CAAGH,KAAK,CAACW,SAAN,CAAgB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACV,EAAF,GAASK,IAAI,CAACL,EAAlB,EAAjB,CAAR,CACAF,KAAK,CAACG,KAAD,CAAL,CAAeI,IAAf,CAEH,CACDX,YAAY,CAACiB,OAAb,CAAqB,OAArB,CAA8BnB,IAAI,CAACoB,SAAL,CAAed,KAAf,CAA9B,EACA,0BAAWA,KAAX,EACJ,IAAKZ,CAAAA,KAAK,CAAC2B,kBAAX,CACIb,EAAE,CAAGD,MAAM,CAACC,EAAZ,CACAC,KAAK,CAAGH,KAAK,CAACW,SAAN,CAAgB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACV,EAAF,GAASA,EAAb,EAAjB,CAAR,CACA;AACAF,KAAK,CAACG,KAAD,CAAL,gCACOH,KAAK,CAACG,KAAD,CADZ,MAEIM,MAAM,CAAE,CAACT,KAAK,CAACG,KAAD,CAAL,CAAaM,MAF1B,GAIAb,YAAY,CAACiB,OAAb,CAAqB,OAArB,CAA8BnB,IAAI,CAACoB,SAAL,CAAed,KAAf,CAA9B,EACA,0BAAWA,KAAX,EACJ,IAAKZ,CAAAA,KAAK,CAAC4B,WAAX,CACI,GAAIC,CAAAA,WAAW,CAAGjB,KAAK,CAACkB,MAAN,CAAa,SAAAN,CAAC,QAAIA,CAAAA,CAAC,CAACV,EAAF,GAASD,MAAM,CAACC,EAApB,EAAd,CAAlB,CACA;AACAF,KAAK,CAAGiB,WAAR,CACArB,YAAY,CAACiB,OAAb,CAAqB,OAArB,CAA8BnB,IAAI,CAACoB,SAAL,CAAed,KAAf,CAA9B,EACA,0BAAWA,KAAX,EAGJ,QACI,MAAOA,CAAAA,KAAP,CAtCR,CAwCH,CA3CD,CA4CA,cAAeD,CAAAA,WAAf","sourcesContent":["import * as types from '../actions/actionTypes'\r\n\r\nvar ranDomId = () => {\r\n    return Math.floor(Math.random() * 1000000);\r\n}\r\nvar data = JSON.parse(localStorage.getItem('tasks'))\r\nvar initState = data ? data : []\r\nvar rootReducer = (state = initState, action) => {\r\n    var id = '';\r\n    var index = -1\r\n    switch (action.type) {\r\n        case types.LIST_ALL:\r\n            return state;\r\n        case types.SAVE_TASK:\r\n            var task = {\r\n                id: action.task.id,\r\n                name: action.task.name,\r\n                status: (action.task.status === 'true' || action.task.status === true) ? true : false\r\n            }\r\n            if (!task.id) {\r\n                task.id = ranDomId()\r\n                state.push(task) // [...state,task]\r\n            } else {\r\n                index = state.findIndex(x => x.id === task.id);\r\n                state[index] = task\r\n\r\n            }\r\n            localStorage.setItem('tasks', JSON.stringify(state))\r\n            return [...state];\r\n        case types.UPDATE_STATUS_TASK:\r\n            id = action.id\r\n            index = state.findIndex(x => x.id === id);\r\n            // state[index].status = !state[index].status\r\n            state[index] = {\r\n                ...state[index],\r\n                status: !state[index].status\r\n            }\r\n            localStorage.setItem('tasks', JSON.stringify(state))\r\n            return [...state];\r\n        case types.DELETE_TASK:\r\n            var curentTasks = state.filter(x => x.id !== action.id)\r\n            // var index = state.findIndex(x => x.id === id)\r\n            state = curentTasks\r\n            localStorage.setItem('tasks', JSON.stringify(state))\r\n            return [...state]\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}